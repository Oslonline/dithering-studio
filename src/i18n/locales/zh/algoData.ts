const algoData = {
  algoData: {
    categories: {
      errordiffusion: '误差扩散',
      ordered: '有序',
      other: '其他',
    },
    complexities: {
      on: 'O(N)',
      onhigherconstant: 'O(N) 更高常数',
      onintegralmap: 'O(N) + 积分图',
      onblockarea: 'O(N * 块区域)',
    },
    origins: {
      belllabs: '贝尔实验室',
      printerfirmwarevariants: '打印机固件变体',
      applemacintosh: 'Apple Macintosh',
      sierrafamily: 'Sierra 系列',
      stevensonarce: 'Stevenson & Arce',
      jarvisjudiceninke: 'Jarvis, Judice, Ninke',
      ostromoukhov: 'Ostromoukhov',
      ditheringstudio: 'Dithering Studio',
      bayer: 'Bayer',
      bayerextended: 'Bayer（扩展）',
      proceduraltable: '程序表',
      earlyimaging: '早期成像',
      project: '项目',
      stochasticscreening: '随机筛选',
      educational: '教育',
      burkes: 'Burkes',
      stucki: 'Stucki',
    },
    1: {
      overview: '经典误差守恒扩散（7/16,3/16,5/16,1/16）平衡质量和速度。',
      characteristics: { 0: '良好的渐变', 1: '细粒度', 2: '基准参考' },
      artifacts: { 0: '对角线点状', 1: '噪声放大' },
      bestFor: { 0: '照片', 1: '通用降噪' },
      reference: 'Floyd & Steinberg 1976',
      neighborhood: '前向 3×2 足迹',
      tonalBias: '中性',
      noiseProfile: '细定向',
      memoryFootprint: '1 个缓冲区',
      implementationNotes: { 0: '蛇形可选以减少定向偏差' },
      notes: { 0: '在打印机和图像库中广泛实现。' },
    },
    19: {
      overview: '简化的 FS，有 3 个邻居（3/8,3/8,2/8）减少算术。',
      characteristics: { 0: '更快', 1: '可接受的质量' },
      artifacts: { 0: '更多定向条纹' },
      bestFor: { 0: '预览', 1: '低功耗' },
      neighborhood: '前向 L 形',
      tonalBias: '中性',
      noiseProfile: '稍粗',
      memoryFootprint: '就地',
      implementationNotes: { 0: '性能受限时的良好备用' },
    },
    3: {
      overview: '非守恒扩散，通过丢弃一些误差创建更亮的中间调。',
      characteristics: { 0: '柔和外观', 1: '亮偏差' },
      artifacts: { 0: '阴影褪色' },
      bestFor: { 0: '像素艺术', 1: '字形渲染' },
      reference: 'Atkinson (Apple)',
      neighborhood: '4 宽 + 2 行子集',
      tonalBias: '亮',
      noiseProfile: '更粗聚类',
      memoryFootprint: '就地',
    },
    12: {
      overview: '轻量级 Sierra 系列变体，在速度上牺牲细节。',
      characteristics: { 0: '快速', 1: '可接受的渐变' },
      artifacts: { 0: '颗粒感更强' },
      bestFor: { 0: '交互式预览' },
      neighborhood: '3×2',
      tonalBias: '稍亮',
      noiseProfile: '更高颗粒',
    },
    4: {
      overview: '中等大小的内核（5×2），比 FS 更平滑，成本低于 Stucki。',
      characteristics: { 0: '比 FS 更平滑', 1: '中等成本' },
      artifacts: { 0: '过度使用时水平条带' },
      bestFor: { 0: '中等照片' },
      neighborhood: '5×2',
      tonalBias: '中性',
      noiseProfile: '中等',
    },
    5: {
      overview: '更大的 5×3 内核以更高成本产生平滑渐变。',
      characteristics: { 0: '平滑', 1: '更低噪声' },
      artifacts: { 0: '轻微柔化' },
      bestFor: { 0: '高分辨率照片' },
      neighborhood: '5×3',
      tonalBias: '中性',
      noiseProfile: '更低高频',
    },
    6: {
      overview: 'Stucki 的平衡替代方案，具有不同的权重分布。',
      characteristics: { 0: '良好的折衷', 1: '平衡的清晰度' },
      artifacts: { 0: '轻微的蠕虫伪影' },
      bestFor: { 0: '照片', 1: '复古' },
      neighborhood: '5×3',
      tonalBias: '中性',
    },
    13: {
      overview: '两行 Sierra 变体平衡速度和质量。',
      characteristics: { 0: '平衡', 1: '成本较低' },
      artifacts: { 0: '定向偏差' },
      bestFor: { 0: '中等分辨率' },
      neighborhood: '5×2',
      tonalBias: '中性',
    },
    14: {
      overview: '稀疏宽内核近似蓝噪声分布。',
      characteristics: { 0: '有机纹理', 1: '低定向性' },
      artifacts: { 0: '更高成本', 1: '斑点' },
      bestFor: { 0: '大型艺术' },
      neighborhood: '11×3 稀疏',
      tonalBias: '中性',
      noiseProfile: '接近蓝噪声',
    },
    7: {
      overview: '密集的 5×3 内核产生非常平滑的渐变。',
      characteristics: { 0: '非常平滑', 1: '高保真' },
      artifacts: { 0: '柔化' },
      bestFor: { 0: '打印准备' },
      neighborhood: '5×3 密集',
      tonalBias: '中性',
    },
    18: {
      overview: '自适应扩散根据局部色调选择权重集以近似最小伪影。',
      characteristics: { 0: '自适应权重', 1: '良好的色调再现' },
      artifacts: { 0: '轻微的定向方差', 1: '更多逻辑' },
      bestFor: { 0: '照片', 1: '混合渐变' },
      neighborhood: '自适应前向',
      tonalBias: '中性',
      noiseProfile: '平衡',
      implementationNotes: {
        0: '根据强度桶在几个小内核中选择',
        1: '可以用更多桶扩展',
      },
    },
    21: {
      overview: 'Floyd–Steinberg 扩散使用从局部 3×3 平均值（半径 1）派生的每像素阈值来保留边缘，同时适应局部色调。',
      characteristics: { 0: '局部自适应', 1: '边缘保留', 2: '低额外成本' },
      artifacts: { 0: '微妙的微光晕', 1: '轻微的局部对比度增强' },
      bestFor: { 0: '纹理照片', 1: '扫描艺术品' },
      neighborhood: 'FS + 3×3 局部平均',
      tonalBias: '中性/轻微扩展',
      noiseProfile: 'FS 细粒度',
      memoryFootprint: '1 个积分 + 1 个浮点缓冲区',
      implementationNotes: {
        0: '构建亮度积分图像（宽度+1）*（高度+1）',
        1: '局部平均值用作动态阈值 + 全局偏差',
        2: '提供调色板时回退到调色板感知 FS',
      },
      notes: {
        0: '半径 1 选择为响应性和稳定性之间的平衡',
        1: '可以扩展自适应对比度加权',
      },
    },
    22: {
      overview: 'Floyd–Steinberg，具有更宽的 7×7（半径 3）局部平均阈值，为低对比度材料提供更平滑的区域色调适应。',
      characteristics: { 0: '宽局部适应', 1: '更平滑的区域', 2: '边缘柔化' },
      artifacts: { 0: '细节柔化', 1: '高对比度边缘上可能出现光晕' },
      bestFor: { 0: '低对比度照片', 1: '着色渲染' },
      neighborhood: 'FS + 7×7 局部平均',
      tonalBias: '柔和的中间调增强',
      noiseProfile: '略低于 FS 的噪声',
      memoryFootprint: '1 个积分 + 1 个浮点缓冲区',
      implementationNotes: {
        0: '与 3×3 变体相同的积分方法（更大的半径）',
        1: '更宽的窗口增加平滑和成本',
        2: '调色板路径委托给现有的 FS 逻辑',
      },
      notes: {
        0: '当全局阈值丢失细微渐变时使用',
        1: '可能会降低细线艺术的清晰度',
      },
    },
    23: {
      overview: '流行的 Sierra 系列内核变体，以适度的成本平衡平滑度和细节。',
      characteristics: { 0: '平衡的纹理', 1: '减少的定向偏差' },
      artifacts: { 0: '轻微柔化' },
      bestFor: { 0: '通用照片', 1: '复古像素外观' },
      neighborhood: '5×3',
      tonalBias: '中性',
      noiseProfile: '中等细',
    },
    16: {
      overview: '最小的 Bayer 矩阵，具有粗糙的棋盘图案。',
      characteristics: { 0: '小矩阵', 1: '强烈的图案' },
      artifacts: { 0: '刺眼的块' },
      bestFor: { 0: '风格化效果' },
      neighborhood: '单元格比较',
      tonalBias: '中性',
      noiseProfile: '粗周期性',
    },
    2: {
      overview: '经典的 4×4 Bayer 阈值图案。',
      characteristics: { 0: '可预测', 1: '快速' },
      artifacts: { 0: '可见的平铺' },
      bestFor: { 0: '像素艺术', 1: '图标' },
      neighborhood: '单元格比较',
      tonalBias: '中性',
    },
    8: {
      overview: '更大的 Bayer 矩阵软化图案可见性。',
      characteristics: { 0: '微妙的图案', 1: '确定性' },
      artifacts: { 0: '低频平铺' },
      bestFor: { 0: '渐变' },
      neighborhood: '单元格比较',
    },
    20: {
      overview: '大型递归 Bayer，用于平滑过渡。',
      characteristics: { 0: '非常微妙', 1: '确定性' },
      artifacts: { 0: '低频平铺' },
      bestFor: { 0: '高分辨率渐变' },
      neighborhood: '单元格比较',
    },
    17: {
      overview: '程序生成的 64×64 渐进式蓝噪声排名掩码。',
      characteristics: { 0: '低重复', 1: '均匀能量' },
      artifacts: { 0: '轻微的残余结构' },
      bestFor: { 0: '通用抖动', 1: '渐变' },
      neighborhood: '掩码查找',
      implementationNotes: { 0: '通过最远点采样在启动时生成' },
    },
    24: {
      overview: '大型 Bayer 矩阵提供非常平滑的色调步骤，在高分辨率下可见结构最小化。',
      characteristics: { 0: '非常微妙的图案', 1: '快速查找' },
      artifacts: { 0: '低频平铺' },
      bestFor: { 0: '大型渐变场', 1: '背景纹理' },
      neighborhood: '单元格比较',
    },
    15: {
      overview: '全局截断产生最大对比度。',
      characteristics: { 0: '清晰的边缘', 1: '简单' },
      artifacts: { 0: '条带', 1: '色调损失' },
      bestFor: { 0: '徽标', 1: '字形' },
      neighborhood: '每像素',
    },
    9: {
      overview: '块点大小模拟模拟半色调。',
      characteristics: { 0: '复古打印', 1: '可调点' },
      artifacts: { 0: '摩尔纹', 1: '块缝' },
      bestFor: { 0: '海报' },
      neighborhood: '块（默认 6×6）',
    },
    10: {
      overview: '每像素随机阈值（白噪声）。',
      characteristics: { 0: '打破条带', 1: '嘈杂' },
      artifacts: { 0: '高噪声', 1: '不可重复' },
      bestFor: { 0: '噪声叠加' },
      neighborhood: '独立',
    },
    11: {
      overview: '点扩散技术的简化占位符。',
      characteristics: { 0: '均匀-ish', 1: '玩具示例' },
      artifacts: { 0: '网格伪影' },
      bestFor: { 0: '演示' },
      neighborhood: '局部',
    },
    25: {
      overview: '基于单元格的亮度采样映射到可配置的 ASCII 渐变以实现马赛克风格输出。',
      characteristics: { 0: '自定义渐变', 1: '风格化马赛克' },
      artifacts: { 0: '块状', 1: '细尺度上细节损失' },
      bestFor: { 0: '风格化预览', 1: '色调分离' },
      neighborhood: '块（4×4）',
    },
  },
};

export default algoData;
